executor: flutter-android
steps:
  - checkout-project
  - run:
      name: Install Github CLI and unzip
      command: |
        curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
        echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null
        sudo apt update
        sudo apt install gh unzip
  - run:
      name: Download Libqaul jniLibs from latest Github Release
      command: |
        VERSION=$(grep "version:" ../pubspec.yaml | awk '{ print $2 }' | sed 's/+.*$//')
        TAG="v${VERSION}"
        echo "Downloading assets from the release tag '$TAG'"
        
        gh release download "$TAG" --pattern "jniLibs.zip" --repo "$REPO_URL" --dir libqaul/src/main/jniLibs
  - run:
      name: Unzip compressed jniLibs
      command: |
        cd libqaul/src/main/jniLibs
        unzip jniLibs.zip
  - install-flutter:
      version: "$FLUTTER_VERSION"
  - run: flutter doctor --verbose
  - run:
      name: Install Flutter Dependencies
      command: cd .. && flutter pub get
  - run:
      name: Install Bundler
      command: ruby --version && sudo gem install bundler -N -v "$(grep -A 1 "BUNDLED WITH" Gemfile.lock | tail -n 1)"
  - install-bundler-deps
  - run: echo "$PLAY_STORE_UPLOAD_KEY" | base64 --decode > app/upload-keystore.jks
  - run: echo "$PLAY_STORE_UPLOAD_KEY_INFO" | base64 --decode > key.properties
  - run: echo "$PLAY_STORE_JSON_KEY" | base64 --decode > fastlane/google-credentials.json
  - run:
      name: fastlane
      command: bundle exec fastlane $FASTLANE_LANE
  - persist_to_workspace:
      root: ~/qaul.net
      paths:
        - qaul_ui/build/app/outputs/bundle/release/*.aab
